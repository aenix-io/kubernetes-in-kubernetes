{{- $fullName := include "kubernetes.fullname" . -}}
---
apiVersion: v1
kind: ServiceAccount
metadata:
  name: "{{ $fullName }}-kubeadm-tasks"
---
kind: Role
apiVersion: rbac.authorization.k8s.io/v1
metadata:
  name: "{{ $fullName }}-kubeadm-tasks"
rules:
- apiGroups: [""]
  resources: ["secrets"]
  verbs: ["get", "list", "watch", "create", "delete", "update", "patch"]
---
kind: RoleBinding
apiVersion: rbac.authorization.k8s.io/v1
metadata:
  name: "{{ $fullName }}-kubeadm-tasks"
subjects:
- kind: ServiceAccount
  name: "{{ $fullName }}-kubeadm-tasks"
  namespace: "{{ .Release.Namespace }}"
roleRef:
  kind: Role
  name: "{{ $fullName }}-kubeadm-tasks"
  apiGroup: rbac.authorization.k8s.io
---
apiVersion: batch/v1
kind: Job
metadata:
  name: "{{ $fullName }}-kubeadm-tasks"
  labels:
    app: "{{ $fullName }}-kubeadm-tasks"
spec:
  template:
    metadata:
      labels:
        app: "{{ $fullName }}-kubeadm-tasks"
      #annotations:
      #  checksum/config: {{ include (print $.Template.BasePath "/kubeadm-config.yaml") . | sha256sum }}
      #  checksum/scripts: {{ include (print $.Template.BasePath "/kubeadm-scripts.yaml") . | sha256sum }}
    spec:
      serviceAccountName: "{{ $fullName }}-kubeadm-tasks"
      restartPolicy: OnFailure
      containers:
      - name: kubeadm
        image: docker.io/kvaps/kubernetes-tools:v0.0.1
        imagePullPolicy: {{ .Values.imagePullPolicy }}
        command: [ '/scripts/configure-cluster.sh' ]
        env:
        - name: FULL_NAME
          value: "{{ $fullName }}"
        {{- with .Values.controlPlaneEndpoint }}
        - name: CONTROL_PLANE_ENDPOINT
          value: "{{ . }}"
        {{- end }}
        volumeMounts:
        - mountPath: /pki/front-proxy-client
          name: pki-front-proxy-client
        - mountPath: /pki/apiserver
          name: pki-apiserver
        - mountPath: /pki/apiserver-etcd-client
          name: pki-apiserver-etcd-client
        - mountPath: /pki/apiserver-kubelet-client
          name: pki-apiserver-kubelet-client
        - mountPath: /pki/ca
          name: pki-ca
        - mountPath: /pki/front-proxy-ca
          name: pki-front-proxy-ca
        - mountPath: /scripts
          name: scripts
        - mountPath: /config
          name: config
      volumes:
      - secret:
          secretName: "{{ $fullName }}-pki-front-proxy-client"
        name: pki-front-proxy-client
      - secret:
          secretName: "{{ $fullName }}-pki-apiserver"
        name: pki-apiserver
      - secret:
          secretName: "{{ $fullName }}-pki-apiserver-etcd-client"
        name: pki-apiserver-etcd-client
      - secret:
          secretName: "{{ $fullName }}-pki-apiserver-kubelet-client"
        name: pki-apiserver-kubelet-client
      - secret:
          secretName: "{{ $fullName }}-pki-ca"
        name: pki-ca
      - secret:
          secretName: "{{ $fullName }}-pki-front-proxy-ca"
        name: pki-front-proxy-ca
      - name: scripts
        configMap:
          name: "{{ $fullName }}-kubeadm-scripts"
          defaultMode: 0777
      - name: config
        configMap:
          name: "{{ $fullName }}-kubeadm-config"
